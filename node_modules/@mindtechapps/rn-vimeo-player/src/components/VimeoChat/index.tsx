import * as React from 'react';
import { View } from 'react-native';
import { WebView } from 'react-native-webview';

import Loader from '../Loader';
import Styles from './styles';
import { VimeoChatProps } from './types';

/**
 * Vimeo chat.
 * @param chatUrl - The chat url.
 * @param customLoader - Use custom loader instead of the default.
 * @param loaderColor - Use custom loader color instead of the default.
 * @param onReady - A function what will be called when the chat is ready.
 * @param onError - A function what will be called when the chat has an error.
 * @param style - The chat's custom style.
 */
export const VimeoChat: React.FC<VimeoChatProps> = (props) => {
  const { chatUrl, customLoader, loaderColor, style, onReady, onError } = props;

  const injectedScript = `
    const meta = document.createElement('meta');
    meta.setAttribute('content', 'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=1');
    meta.setAttribute('name', 'viewport');
    document.getElementsByTagName('head')[0].appendChild(meta);
    true;
  `;

  return (
    <View style={Styles.container}>
      <WebView
        source={{ uri: chatUrl }}
        style={style}
        injectedJavaScript={injectedScript}
        javaScriptEnabledAndroid
        automaticallyAdjustContentInsets
        allowsBackForwardNavigationGestures
        startInLoadingState
        contentInsetAdjustmentBehavior="automatic"
        setSupportMultipleWindows={false}
        renderLoading={() => <Loader customLoader={customLoader} loaderColor={loaderColor} />}
        onLoadEnd={(): void => onReady && onReady()}
        onError={(syntheticEvent) => {
          const { nativeEvent } = syntheticEvent;
          console.warn('Vimeo Chat WebView error: ', nativeEvent);
          onError && onError();
        }}
        onMessage={() => {}}
      />
    </View>
  );
};

export default VimeoChat;
