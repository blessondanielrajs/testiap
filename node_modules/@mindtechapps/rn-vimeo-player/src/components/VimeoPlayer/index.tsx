import React from 'react';
import { View } from 'react-native';
import { WebView } from 'react-native-webview';

import Loader from '../Loader';
import Styles from './styles';
import { VimeoPlayerProps } from './types';

/**
 * Vimeo player.
 * @param videoUrl - The video URL.
 * @param customLoader - Use custom loader instead of the default.
 * @param loaderColor - Use custom loader color instead of the default.
 * @param backgroundColor - The component's background color.
 * @param style - The player's custom style.
 * @param onReady - A function what will be called when the player is ready.
 * @param onError - A function what will be called when the player has an error.
 */
export const VimeoPlayer: React.FC<VimeoPlayerProps> = (props) => {
  const { videoUrl, customLoader, loaderColor, backgroundColor, style, onReady, onError } = props;

  const containerStyle = { backgroundColor };
  const injectedScript = `
    const meta = document.createElement('meta');
    meta.setAttribute('content', 'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=1');
    meta.setAttribute('name', 'viewport');
    document.getElementsByTagName('head')[0].appendChild(meta);
    document.body.style.backgroundColor = '${backgroundColor}';
    true;
  `;

  const webviewRef = React.useRef<WebView>(null);

  return (
    <View style={Styles.container}>
      <WebView
        source={{ uri: videoUrl }}
        style={[containerStyle, style]}
        ref={webviewRef}
        allowsFullscreenVideo
        allowsInlineMediaPlayback
        allowsBackForwardNavigationGestures
        startInLoadingState
        injectedJavaScriptForMainFrameOnly={false}
        contentInsetAdjustmentBehavior="automatic"
        setSupportMultipleWindows={false}
        renderLoading={() => (
          <Loader customLoader={customLoader} loaderColor={loaderColor} style={containerStyle} />
        )}
        onLoadEnd={(): void => {
          onReady && onReady();
          webviewRef.current?.injectJavaScript(injectedScript);
        }}
        onError={(syntheticEvent) => {
          const { nativeEvent } = syntheticEvent;
          console.warn('Vimeo Player WebView error: ', nativeEvent);
          onError && onError();
        }}
        onMessage={() => {}}
      />
    </View>
  );
};

export default VimeoPlayer;
