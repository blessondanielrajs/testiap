{"version":3,"sources":["index.ts"],"names":["url","includes"],"mappings":";;;;;;;eAAgBA,GAAD,IAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,CAACA,GAAG,CAACC,QAAJ,CAAa,YAAb,CAA2B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","sourcesContent":["export default (url: string) => `\nconst getOrientation = () => {\n  const orientation = document.fullscreenElement  ? 'landscape' : 'portrait';\n  return orientation;\n};\n\nconst sendEvent = (name, data) => {\n  window.ReactNativeWebView.postMessage(JSON.stringify({ name, data }));\n};\n\nconst addListeners = () => {\n  const video = document.querySelector('video');\n  const controls = document.querySelector('.vp-controls');\n  let isVisibleControls = ${!url.includes('controls=0')};\n  window.addEventListener(\"fullscreenchange\", (e) => {\n    const orientation = getOrientation();\n    sendEvent('fullscreenchange', { e, orientation });\n  }, false);\n  \n  if(video) {\n    video.addEventListener(\"timeupdate\", (e) => {\n      const percent = Math.round((e.target.currentTime / e.target.duration)*100).toFixed();\n      sendEvent('timeupdate', { currentTime: e.target.currentTime, duration: e.target.duration, percent });\n    });\n    video.addEventListener('audioprocess', (e) => sendEvent('audioprocess', e));\n    video.addEventListener('canplay', (e) => sendEvent('canplay', e));\n    video.addEventListener('canplaythrough', (e) => sendEvent('canplaythrough', e));\n    video.addEventListener('complete', (e) => sendEvent('complete', e));\n    video.addEventListener('durationchange', (e) => sendEvent('durationchange', e));\n    video.addEventListener('emptied', (e) => sendEvent('emptied', e));\n    video.addEventListener('ended', (e) => sendEvent('ended', e));\n    video.addEventListener('loadeddata', (e) => sendEvent('loadeddata', e));\n    video.addEventListener('loadedmetadata', (e) => sendEvent('loadedmetadata', e));\n    video.addEventListener('pause', (e) => sendEvent('pause', e));\n    video.addEventListener('play', (e) => sendEvent('play', e));\n    video.addEventListener('playing', (e) => sendEvent('playing', e));\n    video.addEventListener('ratechange', (e) => sendEvent('ratechange', e));\n    video.addEventListener('seeked', (e) => sendEvent('seeked', e));\n    video.addEventListener('seeking', (e) => sendEvent('seeking', e));\n    video.addEventListener('stalled', (e) => sendEvent('stalled', e));\n    video.addEventListener('suspend', (e) => sendEvent('suspend', e));\n//     video.addEventListener('timeupdate', (e) => sendEvent('timeupdate', e));\n    video.addEventListener('volumechange', (e) => sendEvent('volumechange', e));\n    video.addEventListener('waiting', (e) => sendEvent('waiting', e));\n  }\n  \n  setInterval(()=>{\n    if(controls) {\n      const visible = !controls.classList.contains(\"invisible\");\n      if(visible !== isVisibleControls){\n        isVisibleControls = visible;\n        sendEvent('controlschange', { visible });\n      }\n    }\n  },300);\n};\n\nsetTimeout(function(){addListeners()}, 1000);\n`\n"]}