{"version":3,"names":[],"sources":["GooglePay.ts"],"sourcesContent":["export type PresentParams = PresentType & {\n  clientSecret: string;\n};\n\nexport type PresentType =\n  | {\n      /*\n       * Present Google Pay to collect customer payment details and use it to confirm the\n       * [SetupIntent] represented by [clientSecret].\n       */\n      forSetupIntent?: true;\n      /*\n       * The Google Pay API requires a [currencyCode](https://developers.google.com/pay/api/android/reference/request-objects#TransactionInfo).\n       * [currencyCode] is required even though the SetupIntent API does not require it.\n       */\n      currencyCode: string;\n    }\n  | {\n      /*\n       * Present Google Pay to collect customer payment details and use it to confirm the\n       * [PaymentIntent] represented by [clientSecret].\n       */\n      forSetupIntent?: false;\n    };\n\nexport type InitParams = {\n  merchantName: string;\n  countryCode: string;\n  /**\n   * Billing address collection configuration.\n   */\n  billingAddressConfig?: BillingAddressConfig;\n  /**\n   * Flag to indicate whether Google Pay collect the customer's email address.\n   *\n   * Default to `false`.\n   */\n  isEmailRequired?: boolean;\n} & IsSupportedParams;\n\nexport type IsSupportedParams = {\n  /** Set to true to run in a test environment with relaxed application / merchant requirements. This environment is suggested for early development and for easily testing SDK. Defaults to false. */\n  testEnv?: boolean;\n  /**\n   * If `true`, Google Pay is considered ready if the customer's Google Pay wallet\n   * has an existing payment method. Defaults to false.\n   */\n  existingPaymentMethodRequired?: boolean;\n};\n\nexport interface BillingAddressConfig {\n  isRequired?: boolean;\n  /**\n   * Billing address format required to complete the transaction.\n   */\n  format?: 'FULL' | 'MIN';\n  /**\n   * Set to true if a phone number is required to process the transaction.\n   */\n  isPhoneNumberRequired?: boolean;\n}\n\nexport interface CreatePaymentMethodParams {\n  /*\n   * ISO 4217 alphabetic currency code. (e.g. \"USD\", \"EUR\")\n   */\n  currencyCode: string;\n  /*\n   * Amount intended to be collected. A positive integer representing how much to\n   * charge in the smallest currency unit (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100,\n   * a zero-decimal currency).\n   */\n  amount: number;\n}\n"],"mappings":""}