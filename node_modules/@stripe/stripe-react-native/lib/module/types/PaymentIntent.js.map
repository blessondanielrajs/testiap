{"version":3,"names":["Status"],"sources":["PaymentIntent.ts"],"sourcesContent":["import type { StripeError } from '.';\nimport type { Address } from './Common';\nimport type { Result as PaymentMethodResult } from './PaymentMethod';\nimport type { NextAction } from './NextAction';\nimport type * as PaymentMethod from './PaymentMethod';\n\nexport interface Result {\n  id: string;\n  amount: number;\n  /** The UNIX timestamp (in milliseconds) of the date this PaymentIntent was created. */\n  created: string;\n  currency: string;\n  status: Status;\n  description: string | null;\n  receiptEmail: string | null;\n  canceledAt: string | null;\n  clientSecret: string;\n  livemode: boolean;\n  paymentMethodId: string;\n  captureMethod: 'Automatic' | 'Manual';\n  confirmationMethod: 'Automatic' | 'Manual';\n  lastPaymentError: LastPaymentError | null;\n  shipping: ShippingDetails | null;\n  nextAction: NextAction | null;\n}\n\nexport type ConfirmParams = PaymentMethod.CreateParams;\n\nexport type ConfirmOptions = PaymentMethod.ConfirmOptions;\n\nexport type LastPaymentError = StripeError<string> & {\n  paymentMethod: PaymentMethodResult;\n};\n\nexport type FutureUsage = 'OffSession' | 'OnSession';\n\nexport interface ShippingDetails {\n  address: Required<Address>;\n  name: string;\n  carrier: string;\n  phone: string;\n  trackingNumber: string;\n}\n\nexport enum Status {\n  Succeeded = 'Succeeded',\n  RequiresPaymentMethod = 'RequiresPaymentMethod',\n  RequiresConfirmation = 'RequiresConfirmation',\n  Canceled = 'Canceled',\n  Processing = 'Processing',\n  RequiresAction = 'RequiresAction',\n  RequiresCapture = 'RequiresCapture',\n  Unknown = 'Unknown',\n}\n"],"mappings":"kFA4CYA,OAAM,iCAANA,MAAM,EAANA,MAAM,0BAANA,MAAM,kDAANA,MAAM,gDAANA,MAAM,wBAANA,MAAM,4BAANA,MAAM,oCAANA,MAAM,sCAANA,MAAM,yBAANA,MAAM,kBAANA,MAAM"}