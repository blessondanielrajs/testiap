{"version":3,"names":["usePaymentSheet","useStripe","initPaymentSheetNative","initPaymentSheet","presentPaymentSheetNative","presentPaymentSheet","confirmPaymentSheetPaymentNative","confirmPaymentSheetPayment","resetPaymentSheetCustomerNative","resetPaymentSheetCustomer","useState","loading","setLoading","params","result"],"sources":["usePaymentSheet.tsx"],"sourcesContent":["import type { PaymentSheet } from '../types';\nimport { useState } from 'react';\nimport { useStripe } from './useStripe';\n\n/**\n * usePaymentSheet hook\n */\nexport function usePaymentSheet() {\n  const {\n    initPaymentSheet: initPaymentSheetNative,\n    presentPaymentSheet: presentPaymentSheetNative,\n    confirmPaymentSheetPayment: confirmPaymentSheetPaymentNative,\n    resetPaymentSheetCustomer: resetPaymentSheetCustomerNative,\n  } = useStripe();\n  const [loading, setLoading] = useState(false);\n\n  const initPaymentSheet = async (params: PaymentSheet.SetupParams) => {\n    setLoading(true);\n    const result = await initPaymentSheetNative(params);\n    setLoading(false);\n    return result;\n  };\n\n  const presentPaymentSheet = async () => {\n    setLoading(true);\n    const result = await presentPaymentSheetNative();\n    setLoading(false);\n    return result;\n  };\n\n  const confirmPaymentSheetPayment = async () => {\n    setLoading(true);\n    const result = await confirmPaymentSheetPaymentNative();\n    setLoading(false);\n    return result;\n  };\n\n  const resetPaymentSheetCustomer = async () => {\n    setLoading(true);\n    const result = await resetPaymentSheetCustomerNative();\n    setLoading(false);\n    return result;\n  };\n\n  return {\n    loading,\n    initPaymentSheet,\n    presentPaymentSheet,\n    confirmPaymentSheetPayment,\n    /**\n     * You must call this method when the user logs out from your app. This will ensure that\n     * any persisted authentication state in the PaymentSheet, such as authentication cookies,\n     * is also cleared during logout.\n     */\n    resetPaymentSheetCustomer,\n  };\n}\n"],"mappings":"kXACA,4BACA,uCAKO,QAASA,gBAAe,EAAG,CAChC,eAKI,GAAAC,qBAAS,GAAE,CAJKC,sBAAsB,YAAxCC,gBAAgB,CACKC,yBAAyB,YAA9CC,mBAAmB,CACSC,gCAAgC,YAA5DC,0BAA0B,CACCC,+BAA+B,YAA1DC,yBAAyB,CAE3B,cAA8B,GAAAC,eAAQ,EAAC,KAAK,CAAC,qDAAtCC,OAAO,eAAEC,UAAU,eAE1B,GAAMT,iBAAgB,oDAAG,UAAOU,MAAgC,CAAK,CACnED,UAAU,CAAC,IAAI,CAAC,CAChB,GAAME,OAAM,MAASZ,uBAAsB,CAACW,MAAM,CAAC,CACnDD,UAAU,CAAC,KAAK,CAAC,CACjB,MAAOE,OAAM,CACf,CAAC,iBALKX,iBAAgB,4CAKrB,CAED,GAAME,oBAAmB,qDAAG,WAAY,CACtCO,UAAU,CAAC,IAAI,CAAC,CAChB,GAAME,OAAM,MAASV,0BAAyB,EAAE,CAChDQ,UAAU,CAAC,KAAK,CAAC,CACjB,MAAOE,OAAM,CACf,CAAC,iBALKT,oBAAmB,2CAKxB,CAED,GAAME,2BAA0B,qDAAG,WAAY,CAC7CK,UAAU,CAAC,IAAI,CAAC,CAChB,GAAME,OAAM,MAASR,iCAAgC,EAAE,CACvDM,UAAU,CAAC,KAAK,CAAC,CACjB,MAAOE,OAAM,CACf,CAAC,iBALKP,2BAA0B,2CAK/B,CAED,GAAME,0BAAyB,qDAAG,WAAY,CAC5CG,UAAU,CAAC,IAAI,CAAC,CAChB,GAAME,OAAM,MAASN,gCAA+B,EAAE,CACtDI,UAAU,CAAC,KAAK,CAAC,CACjB,MAAOE,OAAM,CACf,CAAC,iBALKL,0BAAyB,2CAK9B,CAED,MAAO,CACLE,OAAO,CAAPA,OAAO,CACPR,gBAAgB,CAAhBA,gBAAgB,CAChBE,mBAAmB,CAAnBA,mBAAmB,CACnBE,0BAA0B,CAA1BA,0BAA0B,CAM1BE,yBAAyB,CAAzBA,yBACF,CAAC,CACH"}