{"version":3,"names":["ApplePayButton","onPress","buttonStyle","type","borderRadius","props","buttonType","useMemo","mapButtonType","style","mapButtonStyle"],"sources":["ApplePayButton.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport ApplePayButtonNative from './ApplePayButtonNative';\nimport type { AccessibilityProps, StyleProp, ViewStyle } from 'react-native';\nimport type { ApplePayButtonComponent } from '../types';\n\n/**\n *  Apple Pay Button Component Props\n */\nexport interface Props extends AccessibilityProps {\n  style?: StyleProp<ViewStyle>;\n  type?: ApplePayButtonComponent.Type;\n  buttonStyle?: ApplePayButtonComponent.Style;\n  borderRadius?: number;\n  onPress(): void;\n  testID?: string;\n}\n\n/**\n *  Apple Pay Button Component\n *\n * @example\n * ```ts\n *  <ApplePayButton\n *    onPress={pay}\n *    type=\"plain\"\n *    buttonStyle=\"black\"\n *    borderRadius={4}\n *    style={styles.payButton}\n *  />\n * ```\n * @param __namedParameters Props\n * @returns JSX.Element\n * @category ReactComponents\n */\nexport function ApplePayButton({\n  onPress,\n  buttonStyle = 'black',\n  type = 'plain',\n  borderRadius = 4,\n  ...props\n}: Props) {\n  const buttonType = useMemo(() => mapButtonType(type), [type]);\n  const style = useMemo(() => mapButtonStyle(buttonStyle), [buttonStyle]);\n\n  return (\n    <ApplePayButtonNative\n      type={buttonType}\n      buttonStyle={style}\n      borderRadius={borderRadius}\n      onPressAction={onPress}\n      {...props}\n    />\n  );\n}\n\nfunction mapButtonType(type: ApplePayButtonComponent.Type) {\n  switch (type) {\n    case 'plain':\n      return 0;\n    case 'buy':\n      return 1;\n    case 'setUp':\n      return 2;\n    case 'inStore':\n      return 3;\n    case 'donate':\n      return 4;\n    case 'checkout':\n      return 5;\n    case 'book':\n      return 6;\n    case 'subscribe':\n      return 7;\n    case 'reload':\n      return 8;\n    case 'addMoney':\n      return 9;\n    case 'topUp':\n      return 10;\n    case 'order':\n      return 11;\n    case 'rent':\n      return 12;\n    case 'support':\n      return 13;\n    case 'contribute':\n      return 14;\n    case 'tip':\n      return 15;\n    default:\n      return 0;\n  }\n}\n\nfunction mapButtonStyle(type: ApplePayButtonComponent.Style) {\n  switch (type) {\n    case 'white':\n      return 0;\n    case 'whiteOutline':\n      return 1;\n    case 'black':\n      return 2;\n    case 'automatic':\n      return 3;\n    default:\n      return 2;\n  }\n}\n"],"mappings":"kXAAA,qDACA,oFAA0D,6pCAiCnD,QAASA,eAAc,MAMpB,IALRC,QAAO,MAAPA,OAAO,uBACPC,WAAW,CAAXA,WAAW,2BAAG,OAAO,iCACrBC,IAAI,CAAJA,IAAI,oBAAG,OAAO,kCACdC,YAAY,CAAZA,YAAY,4BAAG,CAAC,mBACbC,KAAK,uDAER,GAAMC,WAAU,CAAG,GAAAC,cAAO,EAAC,iBAAMC,cAAa,CAACL,IAAI,CAAC,GAAE,CAACA,IAAI,CAAC,CAAC,CAC7D,GAAMM,MAAK,CAAG,GAAAF,cAAO,EAAC,iBAAMG,eAAc,CAACR,WAAW,CAAC,GAAE,CAACA,WAAW,CAAC,CAAC,CAEvE,MACE,8BAAC,6BAAoB,wBACnB,IAAI,CAAEI,UAAW,CACjB,WAAW,CAAEG,KAAM,CACnB,YAAY,CAAEL,YAAa,CAC3B,aAAa,CAAEH,OAAQ,EACnBI,KAAK,8EACT,CAEN,CAEA,QAASG,cAAa,CAACL,IAAkC,CAAE,CACzD,OAAQA,IAAI,EACV,IAAK,OAAO,CACV,MAAO,EAAC,CACV,IAAK,KAAK,CACR,MAAO,EAAC,CACV,IAAK,OAAO,CACV,MAAO,EAAC,CACV,IAAK,SAAS,CACZ,MAAO,EAAC,CACV,IAAK,QAAQ,CACX,MAAO,EAAC,CACV,IAAK,UAAU,CACb,MAAO,EAAC,CACV,IAAK,MAAM,CACT,MAAO,EAAC,CACV,IAAK,WAAW,CACd,MAAO,EAAC,CACV,IAAK,QAAQ,CACX,MAAO,EAAC,CACV,IAAK,UAAU,CACb,MAAO,EAAC,CACV,IAAK,OAAO,CACV,MAAO,GAAE,CACX,IAAK,OAAO,CACV,MAAO,GAAE,CACX,IAAK,MAAM,CACT,MAAO,GAAE,CACX,IAAK,SAAS,CACZ,MAAO,GAAE,CACX,IAAK,YAAY,CACf,MAAO,GAAE,CACX,IAAK,KAAK,CACR,MAAO,GAAE,CACX,QACE,MAAO,EAAC,CAAC,CAEf,CAEA,QAASO,eAAc,CAACP,IAAmC,CAAE,CAC3D,OAAQA,IAAI,EACV,IAAK,OAAO,CACV,MAAO,EAAC,CACV,IAAK,cAAc,CACjB,MAAO,EAAC,CACV,IAAK,OAAO,CACV,MAAO,EAAC,CACV,IAAK,WAAW,CACd,MAAO,EAAC,CACV,QACE,MAAO,EAAC,CAAC,CAEf"}