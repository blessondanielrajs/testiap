{"version":3,"names":["isDefined","isNumber","isOneOf","isString","NativeModules","Platform","AppEventsLogger","FBAppEventsLogger","AppEvents","AppEventParams","getConstants","setFlushBehavior","flushBehavior","logEvent","eventName","valueToSum","args","Number","shift","parameters","logPurchase","purchaseAmount","currencyCode","logPushNotificationOpen","payload","logProductItem","itemID","availability","condition","description","imageLink","link","title","priceAmount","currency","gtin","mpn","brand","Error","flush","setUserID","userID","OS","clearUserID","getUserID","getAnonymousID","getAdvertiserID","getAttributionID","setUserData","userData","setPushNotificationsDeviceToken","deviceToken","setPushNotificationsRegistrationId","registrationId"],"sources":["FBAppEventsLogger.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @format\n */\nimport {isDefined, isNumber, isOneOf, isString} from './util/validate';\nimport {NativeModules} from 'react-native';\nimport {Platform} from 'react-native';\n\nconst AppEventsLogger = NativeModules.FBAppEventsLogger;\n\n/**\n * Controls when an AppEventsLogger sends log events to the server\n */\nexport type AppEventsFlushBehavior =\n  /**\n   * Flush automatically: periodically (every 15 seconds or after every 100 events), and\n   * always at app reactivation. This is the default value.\n   */\n  | 'auto'\n  /**\n   * Only flush when AppEventsLogger.flush() is explicitly invoked.\n   */\n  | 'explicit_only';\n\n/**\n * Specifies product availability for Product Catalog product item update\n */\nexport type ProductAvailability =\n  /**\n   * Item ships immediately\n   */\n  | 'in_stock'\n  /**\n   * No plan to restock\n   */\n  | 'out_of_stock'\n  /**\n   * Available in future\n   */\n  | 'preorder'\n  /**\n   * Ships in 1-2 weeks\n   */\n  | 'avaliable_for_order'\n  /**\n   * Discontinued\n   */\n  | 'discontinued';\n\n/**\n * Specifies product condition for Product Catalog product item update\n */\nexport type ProductCondition = 'new' | 'refurbished' | 'used';\n\nexport type Params = {[key: string]: string | number};\n\n/**\n * Info about a user to increase chances of matching a Facebook user.\n * See https://developers.facebook.com/docs/app-events/advanced-matching for\n * more info about the expected format of each field.\n */\nexport type UserData = Readonly<{\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n  phone?: string;\n  dateOfBirth?: string;\n  gender?: 'm' | 'f';\n  city?: string;\n  state?: string;\n  zip?: string;\n  country?: string;\n}>;\n\nexport type AppEvent = {\n  AchievedLevel: string;\n  AdClick: string;\n  AdImpression: string;\n  AddedPaymentInfo: string;\n  AddedToCart: string;\n  AddedToWishlist: string;\n  CompletedRegistration: string;\n  CompletedTutorial: string;\n  Contact: string;\n  CustomizeProduct: string;\n  Donate: string;\n  FindLocation: string;\n  InitiatedCheckout: string;\n  Purchased: string;\n  Rated: string;\n  Searched: string;\n  SpentCredits: string;\n  Schedule: string;\n  StartTrial: string;\n  SubmitApplication: string;\n  Subscribe: string;\n  UnlockedAchievement: string;\n  ViewedContent: string;\n};\n\nexport type AppEventParam = {\n  AddType: string;\n  Content: string;\n  ContentID: string;\n  ContentType: string;\n  Currency: string;\n  Description: string;\n  Level: string;\n  NumItems: string;\n  MaxRatingValue: string;\n  OrderId: string;\n  PaymentInfoAvailable: string;\n  RegistrationMethod: string;\n  SearchString: string;\n  Success: string;\n  ValueNo: string;\n  ValueYes: string;\n};\n\nconst {AppEvents, AppEventParams} = AppEventsLogger?.getConstants() || {};\n\nexport default {\n  /**\n   * Sets the current event flushing behavior specifying when events\n   * are sent back to Facebook servers.\n   */\n  setFlushBehavior(flushBehavior: AppEventsFlushBehavior) {\n    AppEventsLogger.setFlushBehavior(flushBehavior);\n  },\n\n  /**\n   * Logs an event with eventName and optional arguments.\n   * This function supports the following usage:\n   * logEvent(eventName: string);\n   * logEvent(eventName: string, valueToSum: number);\n   * logEvent(eventName: string, parameters: {[key:string]:string|number});\n   * logEvent(eventName: string, valueToSum: number, parameters: {[key:string]:string|number});\n   * See https://developers.facebook.com/docs/app-events/android for detail.\n   */\n  logEvent(eventName: string, ...args: Array<number | Params>) {\n    let valueToSum = 0;\n    if (typeof args[0] === 'number') {\n      valueToSum = Number(args.shift());\n    }\n    let parameters = null;\n    if (typeof args[0] === 'object') {\n      parameters = args[0];\n    }\n    AppEventsLogger.logEvent(eventName, valueToSum, parameters);\n  },\n\n  /**\n   * Logs a purchase. See http://en.wikipedia.org/wiki/ISO_4217 for currencyCode.\n   */\n  logPurchase(\n    purchaseAmount: number,\n    currencyCode: string,\n    parameters?: Params,\n  ) {\n    AppEventsLogger.logPurchase(purchaseAmount, currencyCode, parameters);\n  },\n\n  /**\n   * Logs an app event that tracks that the application was open via Push Notification.\n   */\n  logPushNotificationOpen(payload?: Record<string, string | number>) {\n    AppEventsLogger.logPushNotificationOpen(payload);\n  },\n\n  /**\n   * Uploads product catalog product item as an app event\n   * @param itemID – Unique ID for the item. Can be a variant for a product. Max size is 100.\n   * @param availability – If item is in stock. Accepted values are: in stock - Item ships immediately out of stock - No plan to restock preorder - Available in future available for order - Ships in 1-2 weeks discontinued - Discontinued\n   * @param condition – Product condition: new, refurbished or used.\n   * @param description – Short text describing product. Max size is 5000.\n   * @param imageLink – Link to item image used in ad.\n   * @param link – Link to merchant's site where someone can buy the item.\n   * @param title – Title of item.\n   * @param priceAmount – Amount of purchase, in the currency specified by the 'currency' parameter. This value will be rounded to the thousandths place (e.g., 12.34567 becomes 12.346).\n   * @param currency – Currency used to specify the amount.\n   * @param gtin – Global Trade Item Number including UPC, EAN, JAN and ISBN\n   * @param mpn – Unique manufacture ID for product\n   * @param brand – Name of the brand Note: Either gtin, mpn or brand is required.\n   * @param parameters – Optional fields for deep link specification.\n   */\n  logProductItem(\n    itemID: string,\n    availability: ProductAvailability,\n    condition: ProductCondition,\n    description: string,\n    imageLink: string,\n    link: string,\n    title: string,\n    priceAmount: number,\n    currency: string,\n    gtin?: string,\n    mpn?: string,\n    brand?: string,\n    parameters?: Params,\n  ) {\n    if (!isDefined(itemID) || !isString(itemID)) {\n      throw new Error(\"logProductItem expected 'itemID' to be a string\");\n    }\n    if (\n      !isDefined(availability) ||\n      !isOneOf(availability, [\n        'in_stock',\n        'out_of_stock',\n        'preorder',\n        'avaliable_for_order',\n        'discontinued',\n      ])\n    ) {\n      throw new Error(\n        \"logProductItem expected 'availability' to be one of 'in_stock' | 'out_of_stock' | 'preorder' | 'avaliable_for_order' | 'discontinued'\",\n      );\n    }\n    if (\n      !isDefined(condition) ||\n      !isOneOf(condition, ['new', 'refurbished', 'used'])\n    ) {\n      throw new Error(\n        \"logProductItem expected 'condition' to be one of 'new' | 'refurbished' | 'used'\",\n      );\n    }\n    if (!isDefined(description) || !isString(description)) {\n      throw new Error(\"logProductItem expected 'description' to be a string\");\n    }\n    if (!isDefined(imageLink) || !isString(imageLink)) {\n      throw new Error(\"logProductItem expected 'imageLink' to be a string\");\n    }\n    if (!isDefined(link) || !isString(link)) {\n      throw new Error(\"logProductItem expected 'link' to be a string\");\n    }\n    if (!isDefined(title) || !isString(title)) {\n      throw new Error(\"logProductItem expected 'title' to be a string\");\n    }\n    if (!isDefined(priceAmount) || !isNumber(priceAmount)) {\n      throw new Error(\"logProductItem expected 'priceAmount' to be a number\");\n    }\n    if (!isDefined(currency) || !isString(currency)) {\n      throw new Error(\"logProductItem expected 'currency' to be a string\");\n    }\n    if (!isDefined(gtin) && !isDefined(mpn) && !isDefined(brand)) {\n      throw new Error(\n        'logProductItem expected either gtin, mpn or brand to be defined',\n      );\n    }\n\n    AppEventsLogger.logProductItem(\n      itemID,\n      availability,\n      condition,\n      description,\n      imageLink,\n      link,\n      title,\n      priceAmount,\n      currency,\n      gtin,\n      mpn,\n      brand,\n      parameters,\n    );\n  },\n\n  /**\n   * Explicitly kicks off flushing of events to Facebook.\n   */\n  flush() {\n    AppEventsLogger.flush();\n  },\n\n  /**\n   * Sets a custom user ID to associate with all app events.\n   * The userID is persisted until this method is called again with a null userId\n   */\n  setUserID(userID: string | null) {\n    if (userID === null && Platform.OS === 'android') {\n      // TODO: Remove workaround once https://github.com/facebook/facebook-android-sdk/issues/1047 is released\n      AppEventsLogger.clearUserID();\n      return;\n    }\n    AppEventsLogger.setUserID(userID);\n  },\n\n  /**\n   * Clears the currently set user id.\n   * @deprecated use setUserID(null) instead\n   */\n  clearUserID() {\n    AppEventsLogger.clearUserID();\n  },\n\n  /**\n   * Returns user id or null if not set\n   */\n  async getUserID(): Promise<string | null> {\n    return await AppEventsLogger.getUserID();\n  },\n\n  /**\n   * Returns anonymous id or null if not set\n   */\n  async getAnonymousID(): Promise<string | null> {\n    return await AppEventsLogger.getAnonymousID();\n  },\n\n  /**\n   * Returns advertiser id or null if not set\n   */\n  async getAdvertiserID(): Promise<string | null> {\n    return await AppEventsLogger.getAdvertiserID();\n  },\n\n  /**\n   * Returns advertiser id or null if not set.\n   * @platform android\n   */\n  async getAttributionID(): Promise<string | null> {\n    if (Platform.OS === 'ios') {\n      return null;\n    }\n    return await AppEventsLogger.getAttributionID();\n  },\n\n  /**\n   * Set additional data about the user to increase chances of matching a Facebook user.\n   */\n  setUserData(userData: UserData) {\n    AppEventsLogger.setUserData(userData);\n  },\n\n  /**\n   * For iOS only, sets and sends device token to register the current application for push notifications.\n   * @platform ios\n   */\n  setPushNotificationsDeviceToken(deviceToken: string) {\n    AppEventsLogger.setPushNotificationsDeviceToken(deviceToken);\n  },\n\n  /**\n   * For Android only, sets and sends registration id to register the current app for push notifications.\n   * @platform Android\n   */\n  setPushNotificationsRegistrationId(registrationId: string) {\n    AppEventsLogger.setPushNotificationsRegistrationId(registrationId);\n  },\n\n  /**\n   * Predefined event names for logging events common to many apps.\n   */\n  AppEvents,\n\n  /**\n   *  Predefined event name parameters for common additional information to accompany events logged through the `logEvent`.\n   */\n  AppEventParams,\n};\n"],"mappings":"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"}