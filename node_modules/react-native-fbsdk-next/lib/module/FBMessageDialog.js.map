{"version":3,"names":["NativeModules","MessageDialog","FBMessageDialog","canShow","shareContent","show","setShouldFailOnDataError","shouldFailOnDataError"],"sources":["FBMessageDialog.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @format\n */\nimport {RNFBSDKCallback} from './models/FBSDKCallback';\nimport {ShareContent} from './models/FBShareContent';\nimport {NativeModules} from 'react-native';\n\nconst MessageDialog = NativeModules.FBMessageDialog;\n\nexport type MessageDialogResult = RNFBSDKCallback & {\n  postId: string;\n};\n\nexport default {\n  /**\n   * Check if the dialog can be shown.\n   */\n  canShow(shareContent: ShareContent): Promise<boolean> {\n    return MessageDialog.canShow(shareContent);\n  },\n\n  /**\n   * Shows the dialog using the specified content.\n   */\n  show(shareContent: ShareContent): Promise<MessageDialogResult> {\n    return MessageDialog.show(shareContent);\n  },\n\n  /**\n   * Sets whether or not the native message dialog should fail when it encounters a data error.\n   */\n  setShouldFailOnDataError(shouldFailOnDataError: boolean) {\n    MessageDialog.setShouldFailOnDataError(shouldFailOnDataError);\n  },\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAAQA,aAAR,QAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAGD,aAAa,CAACE,eAApC;AAMA,eAAe;EACb;AACF;AACA;EACEC,OAAO,CAACC,YAAD,EAA+C;IACpD,OAAOH,aAAa,CAACE,OAAd,CAAsBC,YAAtB,CAAP;EACD,CANY;;EAQb;AACF;AACA;EACEC,IAAI,CAACD,YAAD,EAA2D;IAC7D,OAAOH,aAAa,CAACI,IAAd,CAAmBD,YAAnB,CAAP;EACD,CAbY;;EAeb;AACF;AACA;EACEE,wBAAwB,CAACC,qBAAD,EAAiC;IACvDN,aAAa,CAACK,wBAAd,CAAuCC,qBAAvC;EACD;;AApBY,CAAf"}