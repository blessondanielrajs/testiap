{"version":3,"names":["FBGraphRequest","constructor","graphPath","config","callback","addStringParameter","paramString","key","parameters","string"],"sources":["FBGraphRequest.ts"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @format\n */\n\nexport type GraphRequestCallback = (\n  error?: Record<string, unknown>,\n  result?: Record<string, unknown>,\n) => void;\nexport type GraphRequestConfig = {\n  /**\n   * The httpMethod to use for the request, for example \"GET\" or \"POST\".\n   */\n  httpMethod?: string;\n  /**\n   * The Graph API version to use (e.g., \"v2.0\")\n   */\n  version?: string;\n  /**\n   * The request parameters.\n   */\n  parameters?: GraphRequestParameters;\n  /**\n   * The access token used by the request.\n   */\n  accessToken?: string;\n};\nexport type GraphRequestParameters = {[key: string]: unknown};\n\n/**\n * Represents a Graph API request and provides batch request supports.\n */\nclass FBGraphRequest {\n  /**\n   * The Graph API endpoint to use for the request, for example \"me\".\n   */\n  graphPath: string;\n\n  /**\n   * The optional config for the request.\n   */\n  config: GraphRequestConfig;\n\n  /**\n   * Called upon completion or failure of the request.\n   */\n  callback: GraphRequestCallback;\n\n  /**\n   * Constructs a new Graph API request.\n   */\n  constructor(\n    graphPath: string,\n    config?: GraphRequestConfig,\n    callback?: GraphRequestCallback,\n  ) {\n    this.graphPath = graphPath;\n    this.config = config ? config : {};\n    this.callback = callback ? callback : () => null;\n  }\n\n  /**\n   * Adds a string parameter to the request.\n   */\n  addStringParameter(paramString: string, key: string) {\n    if (this.config != null && this.config.parameters != null) {\n      this.config.parameters[key] = {string: paramString};\n    }\n  }\n}\n\nexport default FBGraphRequest;\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA0BA;AACA;AACA;AACA,MAAMA,cAAN,CAAqB;EACnB;AACF;AACA;;EAGE;AACF;AACA;;EAGE;AACF;AACA;;EAGE;AACF;AACA;EACEC,WAAW,CACTC,SADS,EAETC,MAFS,EAGTC,QAHS,EAIT;IAAA;;IAAA;;IAAA;;IACA,KAAKF,SAAL,GAAiBA,SAAjB;IACA,KAAKC,MAAL,GAAcA,MAAM,GAAGA,MAAH,GAAY,EAAhC;IACA,KAAKC,QAAL,GAAgBA,QAAQ,GAAGA,QAAH,GAAc,MAAM,IAA5C;EACD;EAED;AACF;AACA;;;EACEC,kBAAkB,CAACC,WAAD,EAAsBC,GAAtB,EAAmC;IACnD,IAAI,KAAKJ,MAAL,IAAe,IAAf,IAAuB,KAAKA,MAAL,CAAYK,UAAZ,IAA0B,IAArD,EAA2D;MACzD,KAAKL,MAAL,CAAYK,UAAZ,CAAuBD,GAAvB,IAA8B;QAACE,MAAM,EAAEH;MAAT,CAA9B;IACD;EACF;;AApCkB;;eAuCNN,c"}