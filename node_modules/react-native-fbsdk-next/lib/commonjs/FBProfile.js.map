{"version":3,"names":["Profile","NativeModules","FBProfile","constructor","profileMap","firstName","lastName","middleName","linkURL","imageURL","userID","Platform","OS","email","name","Object","freeze","getCurrentProfile","Promise","resolve"],"sources":["FBProfile.ts"],"sourcesContent":["/**\n * @format\n */\nimport {Platform, NativeModules} from 'react-native';\n\nconst Profile = NativeModules.FBProfile;\n\nexport type ProfileMap = {\n  firstName?: string | null;\n  lastName?: string | null;\n  middleName?: string | null;\n  imageURL?: string | null;\n  linkURL?: string | null;\n  userID?: string | null;\n  email?: string | null;\n  name?: string | null;\n};\n\n/**\n * Represents an immutable Facebook profile\n * This class provides a global \"currentProfile\" instance to more easily add social context to your application.\n */\nclass FBProfile {\n  /**\n   * The user id\n   */\n  userID?: string | null;\n\n  /**\n   * The user's email.\n   * IMPORTANT: This field will only be populated if your user has granted your application the 'email' permission.\n   */\n  email?: string | null;\n\n  /**\n   * The user's complete name\n   */\n  name?: string | null;\n\n  /**\n   * The user's first name\n   */\n  firstName?: string | null;\n\n  /**\n   * The user's last name\n   */\n  lastName?: string | null;\n\n  /**\n   * The user's middle name\n   */\n  middleName?: string | null;\n\n  /**\n   * A URL to the user's profile.\n   * IMPORTANT: This field will only be populated if your user has granted your application the 'user_link' permission\n   */\n  linkURL?: string | null;\n\n  /**\n   * A URL to use for fetching a user's profile image.\n   */\n  imageURL?: string | null;\n\n  constructor(profileMap: ProfileMap) {\n    this.firstName = profileMap.firstName;\n    this.lastName = profileMap.lastName;\n    this.middleName = profileMap.middleName;\n    this.linkURL = profileMap.linkURL;\n    this.imageURL = profileMap.imageURL;\n    this.userID = profileMap.userID;\n    if (Platform.OS !== 'android') {\n      this.email = profileMap.email;\n    }\n    this.name = profileMap.name;\n    Object.freeze(this);\n  }\n\n  /**\n   * Getter the current logged profile\n   */\n  static getCurrentProfile(): Promise<FBProfile | null> {\n    return new Promise((resolve) => {\n      Profile.getCurrentProfile((profileMap: ProfileMap) => {\n        if (profileMap) {\n          resolve(new FBProfile(profileMap));\n        } else {\n          resolve(null);\n        }\n      });\n    });\n  }\n}\n\nexport default FBProfile;\n"],"mappings":";;;;;;;AAGA;;;;AAEA,MAAMA,OAAO,GAAGC,0BAAA,CAAcC,SAA9B;;AAaA;AACA;AACA;AACA;AACA,MAAMA,SAAN,CAAgB;EACd;AACF;AACA;;EAGE;AACF;AACA;AACA;;EAGE;AACF;AACA;;EAGE;AACF;AACA;;EAGE;AACF;AACA;;EAGE;AACF;AACA;;EAGE;AACF;AACA;AACA;;EAGE;AACF;AACA;EAGEC,WAAW,CAACC,UAAD,EAAyB;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAClC,KAAKC,SAAL,GAAiBD,UAAU,CAACC,SAA5B;IACA,KAAKC,QAAL,GAAgBF,UAAU,CAACE,QAA3B;IACA,KAAKC,UAAL,GAAkBH,UAAU,CAACG,UAA7B;IACA,KAAKC,OAAL,GAAeJ,UAAU,CAACI,OAA1B;IACA,KAAKC,QAAL,GAAgBL,UAAU,CAACK,QAA3B;IACA,KAAKC,MAAL,GAAcN,UAAU,CAACM,MAAzB;;IACA,IAAIC,qBAAA,CAASC,EAAT,KAAgB,SAApB,EAA+B;MAC7B,KAAKC,KAAL,GAAaT,UAAU,CAACS,KAAxB;IACD;;IACD,KAAKC,IAAL,GAAYV,UAAU,CAACU,IAAvB;IACAC,MAAM,CAACC,MAAP,CAAc,IAAd;EACD;EAED;AACF;AACA;;;EAC0B,OAAjBC,iBAAiB,GAA8B;IACpD,OAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;MAC9BnB,OAAO,CAACiB,iBAAR,CAA2Bb,UAAD,IAA4B;QACpD,IAAIA,UAAJ,EAAgB;UACde,OAAO,CAAC,IAAIjB,SAAJ,CAAcE,UAAd,CAAD,CAAP;QACD,CAFD,MAEO;UACLe,OAAO,CAAC,IAAD,CAAP;QACD;MACF,CAND;IAOD,CARM,CAAP;EASD;;AAtEa;;eAyEDjB,S"}